name: CI/CD Simple Hello World App

on:
  push:
    branches:
      - master
    paths:
      - "frontend/**"
      - "backend/**"

jobs:
  cicd:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: DockerHub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v1

      - name: Detect Changes
        id: changes
        run: |
          echo "frontend=$(git diff --name-only | grep -E '^frontend/' || true)" >> $GITHUB_ENV
          echo "backend=$(git diff --name-only | grep -E '^backend/' || true)" >> $GITHUB_ENV
          echo ${{ env.frontend }}
          echo ${{ env.backend }}

      - name: Build & Push Frontend Container
        if: ${{ env.frontend != '' }}
        run: |
          cd frontend
          docker build -t ${{ secrets.DOCKER_USERNAME }}/node-frontend:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/node-frontend:latest

      - name: Build Backend Container
        if: ${{ env.backend != '' }}
        run: |
          cd backend
          docker build -t ${{ secrets.DOCKER_USERNAME }}/node-backend:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/node-backend:latest

      - name: Deploy Frontend Container
        if: ${{ env.frontend != '' }}
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            docker pull ${{ secrets.DOCKER_USERNAME }}/node-frontend:latest
            docker stop node-backend || true
            docker rm node-backend || true
            docker run -d --name node-backend -p 8010:4502 ${{ secrets.DOCKER_USERNAME }}/node-frontend:latest
          EOF

      - name: Deploy Backend Container
        if: ${{ env.backend != '' }}
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            docker pull ${{ secrets.DOCKER_USERNAME }}/node-backend:latest
            docker stop node-backend || true
            docker rm node-backend || true
            docker run -d --name node-backend -p 8020:4501 ${{ secrets.DOCKER_USERNAME }}/node-backend:latest
          EOF
